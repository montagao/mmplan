// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "For use with the Monta Monta Plan application",
    "title": "MM Plan API",
    "version": "1.0.0"
  },
  "basePath": "/api",
  "paths": {
    "/v1/plan/": {
      "get": {
        "operationId": "getPlans",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List the plans",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/plan"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "operationId": "addPlan",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/plan"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/plan"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/plan"
            }
          }
        }
      }
    },
    "/v1/plan/{id}": {
      "get": {
        "operationId": "getPlanById",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/plan"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/plan"
            }
          }
        }
      },
      "put": {
        "operationId": "updatePlan",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/plan"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/plan"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "operationId": "deletePlan",
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "format": "int64",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "plan": {
      "type": "object",
      "required": [
        "id",
        "isComplete"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "isComplete": {
          "type": "boolean"
        },
        "list1": {
          "type": "string",
          "minLength": 1
        },
        "list2": {
          "type": "string",
          "minLength": 1
        },
        "name1": {
          "type": "string",
          "minLength": 1
        },
        "name2": {
          "type": "string",
          "minLength": 1
        },
        "planName": {
          "type": "string",
          "minLength": 1
        },
        "timestamp": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "For use with the Monta Monta Plan application",
    "title": "MM Plan API",
    "version": "1.0.0"
  },
  "basePath": "/api",
  "paths": {
    "/v1/plan/": {
      "get": {
        "operationId": "getPlans",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List the plans",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/plan"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "operationId": "addPlan",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/plan"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/plan"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/plan"
            }
          }
        }
      }
    },
    "/v1/plan/{id}": {
      "get": {
        "operationId": "getPlanById",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/plan"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/plan"
            }
          }
        }
      },
      "put": {
        "operationId": "updatePlan",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/plan"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/plan"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "operationId": "deletePlan",
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "format": "int64",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "plan": {
      "type": "object",
      "required": [
        "id",
        "isComplete"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "isComplete": {
          "type": "boolean"
        },
        "list1": {
          "type": "string",
          "minLength": 1
        },
        "list2": {
          "type": "string",
          "minLength": 1
        },
        "name1": {
          "type": "string",
          "minLength": 1
        },
        "name2": {
          "type": "string",
          "minLength": 1
        },
        "planName": {
          "type": "string",
          "minLength": 1
        },
        "timestamp": {
          "type": "string"
        }
      }
    }
  }
}`))
}
